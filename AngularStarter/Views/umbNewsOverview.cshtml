@using AngularStarter.Models
@inherits Umbraco.Web.Mvc.UmbracoViewPage<AngRenderModel>
@{
    Layout = Model.isApp ? "Blank.cshtml" : "umbLayout.cshtml";
}

@if (Model.isApp)
{
    <div id="main-wrapper" umb-news-overview-widget="content">
        <div id="main" class="container">
            <div class="row">
                <div class="12u skel-cell-mainContent">
                    <div class="content">
                        <!-- Content -->
                        <article class="is-page-content">
                            <header>
                                <h2>{{content.title ? content.title : content.Name}}</h2>
                            </header>
                                <section ng-repeat="item in newsItems">
                                    <h3><a href="{{item.Url}}">{{item.title ? item.title : item.Name}}</a></h3>
                                    <span class="byline">{{item.subHeader}}</span>
                                    <ul class="meta">
                                        <li class="timestamp">{{item.CreateDate}}</li>
                                    </ul>

                                    
                                
                                        <a href="{{item.Url}}" class="image image-full" ng-show="item.image">
                                            <img src="{{item.image}}" alt="" /></a>
                                

                                    <span ng-bind-html="html(featuredNewsItem.bodyText, 200)"></span>

                                    <a href="{{item.Url}}" class="button">Continue Reading</a>
                                </section>
                        
                        </article>
                        <!-- /Content -->
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="12u">
                    @{ Html.RenderPartial("umbFeatures"); }
                </div>
            </div>
        </div>
    </div>

} else
{

    Layout = Model.isApp ? "Blank.cshtml" : "umbLayout.cshtml";

    var CurrentPage = Model.Content;
    // If the editor has not explicitly provided the "Page title" property page 
    // then just show the name of the page otherwise show the provided title
    var pageTitle = string.IsNullOrWhiteSpace(CurrentPage.GetPropertyValue<string>("Title"))
        ? CurrentPage.Name
        : CurrentPage.GetPropertyValue("Title" );

    // Model.Content is the current page that we're on
    // AncestorsOrSelf is all of the ancestors this page has in the tree
    // (1) means: go up to level 1 and stop looking for more ancestors when you get there
    // First() gets the first ancestor found (the home page, on level 1)
    var homePage = CurrentPage.AncestorsOrSelf(1).First();    
    
    // Find all pages with document type alias umbNewsOverview
    // We do that using the plural, umbNewsOverviews (note the extra "s" in the end)
    // Then take the first one, as we know there will only be on news overview page
    var newsOverview = homePage.Descendants("umbNewsOverview").First();

    // Similar to above: find all pages with document type umbNewsItem under the news overview page
    // Then order them, first by publishDate (a property the editor can explicitly set on the news item)
    // and then by createDate, which is set by Umbraco automatically when a page gets created.
    var newsItems = newsOverview.Descendants("umbNewsItem").OrderBy("publishDate desc, createDate desc").Take(5);


<!-- Main -->
<div id="main-wrapper" umb-news-overview-widget="content">
    <div id="main" class="container">
        <div class="row">
            <div class="12u skel-cell-mainContent">
                <div class="content">
                    <!-- Content -->
                    <article class="is-page-content">
                        <header>
                            <h2>@pageTitle</h2>
                        </header>

                        @foreach (var item in newsItems)
                        {

                            // If the editor has not explicitly provided the "Page title" property page 
                            // then just show the name of the page otherwise show the provided title
                            var title = string.IsNullOrWhiteSpace(item.GetPropertyValue<string>("Title"))
                                ? item.Name
                                : item.GetPropertyValue<string>("Title");


                            // If the editor has not explicitly set the publishDate property then show the create date
                            var dateTime = item.CreateDate;
                                
                            
                            <section>
                                <h3><a href="@item.Url">@title</a></h3>
                                <span class="byline">@item.GetPropertyValue("SubHeader")</span>
                                <ul class="meta">
                                    <li class="timestamp">@dateTime.ToString("f")</li>
                                </ul>

                                @if (string.IsNullOrWhiteSpace(item.GetPropertyValue<string>("Image")) == false)
                                {
                                    <a href="@item.Url" class="image image-full"><img src="@item.GetPropertyValue("Image")" alt="" /></a>
                                }

                                @Umbraco.Truncate(item.GetPropertyValue<string>("BodyText"), 200)

                                <a href="@item.Url" class="button">Continue Reading</a>
                            </section>
                        }
                    </article>
                    <!-- /Content -->
                </div>
            </div>
        </div>
        <div class="row">
            <div class="12u">
                @{ Html.RenderPartial("umbFeatures"); }
            </div>
        </div>
    </div>
</div>
<!-- /Main -->
}